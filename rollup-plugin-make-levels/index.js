import {
  MAP_HEIGHT,
  MAP_WIDTH
} from '../src/config'
import { makeCollision } from './make-collision'
import { makeGround } from './make-ground'

const fs = require('fs')
const path = require('path')

function outputLevels ({ collisions, grounds, seeds }) {
  const out = fs.createWriteStream(path.join(__dirname, 'src/levels.js'))

  out.write('/* Autogenerated by rollup-plugin-make-levels; do NOT edit! */\n\n')

  out.write('const levels = [\n')

  collisions.forEach((collision, level) => {
    out.write([
      '  /*',
      '    Level ' + (1 + level) + ' (' + seeds[level] + ')',
      '\n'
    ].join('\n'))

    for (let y = 0; y < MAP_HEIGHT; ++y) {
      out.write('    ')

      for (let x = 0; x < MAP_WIDTH; ++x) {
        out.write(['@', '.'][collision[y * MAP_WIDTH + x]])
      }

      out.write('\n')
    }

    out.write([
      '  */',
      '  {',
      '    collision: [\n'
    ].join('\n'))

    for (let y = 0; y < MAP_HEIGHT; ++y) {
      out.write('      ')

      for (let x = 0; x < MAP_WIDTH; ++x) {
        out.write(collision[y * MAP_WIDTH + x] + '')

        if (!(x === MAP_WIDTH - 1 && y === MAP_HEIGHT - 1)) {
          out.write(',')
        }

        if (x < MAP_WIDTH - 1) {
          out.write(' ')
        }
      }

      out.write('\n')
    }

    out.write('    ],\n')

    const ground = grounds[level]

    out.write('    ground: [\n')

    for (let y = 0; y < MAP_HEIGHT; ++y) {
      out.write('      ')

      for (let x = 0; x < MAP_WIDTH; ++x) {
        out.write(ground[y * MAP_WIDTH + x] + '')

        if (!(x === MAP_WIDTH - 1 && y === MAP_HEIGHT - 1)) {
          out.write(',')
        }

        if (x < MAP_WIDTH - 1) {
          out.write(' ')
        }
      }

      out.write('\n')
    }

    out.write('    ]\n')

    out.write('  }')
    out.write(level < collisions.length - 1 ? ',\n' : '')
    out.write('\n')
  })

  out.end([
    ']',
    '',
    'export {',
    '  levels',
    '}\n'
  ].join('\n'))
}

const makeLevels = () => ({
  buildStart () {
    const seeds = [
      0, 1, 2, 3, 5,
      6, 8, 9, 10, 11,
      12, 13, 14, 15, 16,
      17, 19, 21, 22, 24
    ]

    const collisions = seeds.map(seed => makeCollision({ seed }))

    const grounds = collisions.map(collisionData => makeGround({ collisionData }))

    outputLevels({ collisions, grounds, seeds })
  },
  load: id => id === 'virtual-module' ? 'export default "This is virtual!"' : null,
  name: 'make-levels',
  resolveId: source => source === 'virtual-module' ? source : null
})

export {
  makeLevels
}
